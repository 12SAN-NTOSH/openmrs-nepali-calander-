"use strict";
// No doubt half the type annotations in this file are wrong;
// hence the frequent abuse of ["attribute"] accessors.
Object.defineProperty(exports, "__esModule", { value: true });
exports.load = void 0;
const typedoc_1 = require("typedoc");
function load(app) {
    function applyFileCategory(_ctx, refl, node) {
        if (!node)
            return;
        const moduleCategory = getModuleCategory(node);
        if (moduleCategory && !nodeHasCategory(node)) {
            refl.comment = refl.comment || new typedoc_1.Comment();
            if (refl.comment.tags.filter(t => t.tagName == "category").length == 0) {
                refl.comment.tags.push(new typedoc_1.CommentTag("category", undefined, moduleCategory));
            }
        }
    }
    app.converter.on(typedoc_1.Converter.EVENT_CREATE_DECLARATION, applyFileCategory);
}
exports.load = load;
;
function nodeHasCategory(node) {
    var _a, _b, _c;
    if ((_a = node["jsDoc"]) === null || _a === void 0 ? void 0 : _a.length) {
        for (let doc of node["jsDoc"]) {
            // Get category tags only if it's not a module doc
            if (((_b = doc["tags"]) === null || _b === void 0 ? void 0 : _b.filter(t => t.tagName.escapedText == "module").length) == 0 &&
                ((_c = doc["tags"]) === null || _c === void 0 ? void 0 : _c.filter(t => t.tagName.escapedText == "category").length) > 0) {
                return true;
            }
        }
    }
    return false;
}
function getModuleCategory(node) {
    var _a, _b, _c;
    const sourceFile = getSourceFile(node);
    if (sourceFile) {
        const statements = sourceFile["statements"].filter(s => s["jsDoc"]);
        for (let statement of statements) {
            for (let doc of statement["jsDoc"]) {
                if (((_a = doc["tags"]) === null || _a === void 0 ? void 0 : _a.filter(t => t.tagName.escapedText == "module").length) &&
                    ((_b = doc["tags"]) === null || _b === void 0 ? void 0 : _b.filter(t => t.tagName.escapedText == "category").length)) {
                    return (_c = doc["tags"]) === null || _c === void 0 ? void 0 : _c.filter(t => t.tagName.escapedText == "category")[0].comment;
                }
            }
        }
    }
}
function getSourceFile(node) {
    if (node["fileName"]) {
        return node;
    }
    else if (node.parent) {
        return getSourceFile(node.parent);
    }
    return null;
}
